@using BlazorElectronToolbar.Shared
@using Helpers
@inject IToolbarCommandControl TEC

<div class="element-info" id="about-dialog">
    <span class="h3">About</span>
    <p>
        This is a simple productivity tool written using <a href="#" @onclick:preventDefault="true" @onclick="@(async()=> { await OpenLink("https://github.com/ElectronNET/Electron.NET"); })">Electron.NET</a>, ASP.NET Core, Blazor Web Assembly and Razor.
        For the purpose of pinnig important frequently ran files or visited folders for easy access.
        <br />
        If you notice any issues or have a suggestion, please email me on <a href="mailto:hamzi1995@gmail.com">here</a>.
        <br />
        Or create an issue/submit a pull request on the <a href="#" @onclick:preventDefault="true" @onclick="@(async()=> { await OpenLink("https://github.com/hmz777/Z-Toolbar-Blazor-Electron"); })">GitHub repo</a>.
    </p>
    <div class="info-data">
        @foreach (var Item in AboutModel.Data.OrderBy(d => d.Key))
        {
            <div class="info-sec info-sec--n">
                <span class="label">@Item.Key</span>
                <span class="value">@Item.Value</span>
            </div>
        }
    </div>
    <div class="social-links">
        @foreach (var Item in AboutModel.Links)
        {
            <a class="link-icon" href="#" @onclick:preventDefault="true" @onclick="@(async()=> { await OpenLink(Item.Value); })"><i class="lab @Item.Key la-2x"></i></a>
        }
    </div>
</div>

@code {
    [Parameter] public AboutModel AboutModel { get; set; }

    /// <summary>
    /// The same handler for launching files but for links
    /// </summary>
    /// <param name="Link"></param>
    /// <returns></returns>
    async Task OpenLink(string Link)
    {
        await TEC.Run(Link);
    }
}